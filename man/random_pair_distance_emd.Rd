% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/random-distance.R
\name{random_pair_distance_emd}
\alias{random_pair_distance_emd}
\title{Random Pair Distance Earth Mover's Distance}
\usage{
random_pair_distance_emd(
  Xin,
  Xout,
  n_pairs = 1000,
  metric_in = "l2sqr",
  metric_out = "l2sqr",
  range_scale = TRUE,
  is_transposed = FALSE,
  n_threads = 0
)
}
\arguments{
\item{Xin}{the input data (usually high-dimensional), a matrix or data frame
with one observation per row, or if \code{is_transposed = TRUE}, one observation
per column.}

\item{Xout}{the output data (usually lower dimensional than \code{Xin}), a matrix
or data frame with one observation per row, or if \code{is_transposed = TRUE},
one observation per column.}

\item{n_pairs}{the number of random pairs of observations to calculate
distances for in the input and output space.}

\item{metric_in}{the distance calculation to apply to \code{Xin}. One of
\code{"euclidean"}, \code{"l2sqr"} (squared Euclidean), \code{"cosine"}, \code{"manhattan"},
\code{"correlation"} (1 minus the Pearson correlation), or \code{"hamming"}.}

\item{metric_out}{the distance metric to apply to \code{Xout}. See \code{metric_in} for
details.}

\item{range_scale}{if \code{TRUE} (the default) then scale each distance vector
to the range 0-1 before converting to a distribution.}

\item{is_transposed}{if \code{TRUE} then \code{Xin} and \code{Xout} are assumed to have been
passed in transposed format, i.e. with one observation per column.
Otherwise, \code{Xin} and \code{Xout} will be transposed. For large datasets,
transposing can be slow, so if this function will be called multiple times
with the same input data, it is more efficient to transpose the input data
once outside of this function and set \code{is_transposed = TRUE}.}

\item{n_threads}{the maximum number of threads to use.}
}
\value{
The Earth Mover's distance between the empirical distributions formed
from the distances in the input and output space.
}
\description{
Evaluates the preservation of global structure of dimensionality reduction
results using the Earth Mover's Distances between the distribution of
randomly selected pairs of distances, similar to the method of Heiser and Lau
(2020).
}
\details{
This function repeatedly samples random pairs of observations and calculates
the distance between the points in both the original data and the embedding
space. Each set of distances are scaled between \verb{(0, 1)}, converted into an
empirical distribution and the Earth Mover's (or Wasserstein) distance is
calculated.

This function differs slightly from the procedure in the Heiser and Lau paper
which considers all pair-wise distances.
}
\examples{
iris_pca2 <- stats::prcomp(iris[, -5], rank. = 2, scale = FALSE, retx = TRUE)$x
random_pair_distance_emd(iris, iris_pca2)

# If you plan on comparing the results of multiple output methods, then
# pre-transposing the input data can save time
tiris <- t(iris[, -5])
iris_pca1 <- stats::prcomp(iris[, -5], rank. = 1, scale = FALSE, retx = TRUE)$x
iris_pca3 <- stats::prcomp(iris[, -5], rank. = 3, scale = FALSE, retx = TRUE)$x
random_pair_distance_emd(tiris, t(iris_pca1), is_transposed = TRUE)
random_pair_distance_emd(tiris, t(iris_pca2), is_transposed = TRUE)
random_pair_distance_emd(tiris, t(iris_pca3), is_transposed = TRUE)
}
\references{
Heiser, C. N., & Lau, K. S. (2020).
A quantitative framework for evaluating single-cell data structure preservation by dimensionality reduction techniques.
\emph{Cell reports}, \emph{31}(5), 107576.
}
\seealso{
\code{\link[=random_pair_distance_correlation]{random_pair_distance_correlation()}} and \code{\link[=random_triplet_accuracy]{random_triplet_accuracy()}}
for another measure of global structure preservation.
}
